/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RestaurantAdminRole;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Restaurant.Restaurant;
import Business.Role.AdminRole;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import userinterface.SystemAdminWorkArea.SystemAdminWorkAreaJPanel;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;

/**
 *
 * @author raunak
 */
public class RestaurantInfoJPanel extends JPanel {

    private JPanel userProcessContainer;
    private EcoSystem business;
    UserAccount userAccount;
    
    
    /**
     * Creates new form LabAssistantWorkAreaJPanel
     */
    public RestaurantInfoJPanel(JPanel userProcessContainer, EcoSystem business, UserAccount userAccount) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.business = business;
        this.userAccount = userAccount;
        populateTable();
    }
    
    public void populateTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        model.setRowCount(0);
        Object[] row = new Object[1];
        row[0]=userAccount.getUsername();
        model.addRow(row);
        }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new JScrollPane();
        workRequestJTable = new JTable();
        saveJButton = new JButton();
        refreshJButton = new JButton();
        backJButton = new JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        workRequestJTable.setModel(new DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
               "username"
            }
        ) {
            Class[] types = new Class [] {
                Object.class
            };
            boolean[] canEdit = new boolean [] {
               true
            };


            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });


        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
        }

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(108, 58, 375, 96));



        saveJButton.setText("save changes");
        saveJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processJButtonActionPerformed(evt);
            }
        });
        add(saveJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(246, 215, -1, -1));


        backJButton.setText("back");
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });
        add(backJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 215, -1, -1));


        refreshJButton.setText("Refresh");
        refreshJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshJButtonActionPerformed(evt);
            }
        });
        add(refreshJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 26, -1, -1));
    }// </editor-fold>//GEN-END:initComponents


    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt){
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        SystemAdminWorkAreaJPanel dwjp = (SystemAdminWorkAreaJPanel) component;
        dwjp.populateTree();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }


    private void processJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processJButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        for(int i = 0; i<model.getRowCount(); i++) {
            for (int j = 0; j < model.getColumnCount(); j++) {
                    String temp_name;
                    Object temp = model.getValueAt(i, j);
                    if (temp instanceof Number) {
                        temp_name = Integer.toString((Integer) temp);
                    } else {
                        temp_name = (String) model.getValueAt(i, j);
                    }
                    Restaurant s = business.getRestaurantDirectory().getRestaurantArrayList().get(i);
                    for (UserAccount v : business.getUserAccountDirectory().getUserAccountList()) {
                        if (s.getName().equals(v.getUsername())) {
                            business.getUserAccountDirectory().getUserAccountList().get(i).setUsername(temp_name);
                        }
                    }
                    business.getRestaurantDirectory().getRestaurantArrayList().get(i).setName(temp_name);

            }
        }
        JOptionPane.showMessageDialog(this,"changing success");
        populateTable();

    }//GEN-LAST:event_processJButtonActionPerformed

    private void refreshJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshJButtonActionPerformed
        populateTable();
    }//GEN-LAST:event_refreshJButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JButton deleteJButton;
    private JScrollPane jScrollPane1;
    private JButton saveJButton;
    private JButton refreshJButton;
    private JTable workRequestJTable;
    private JTextField passwordTextfield;
    private JTextField usernameTextfield;
    private JButton addJButton;
    private JButton backJButton;
    private JLabel passwordLabel;
    private JLabel usernameLabel;
    // End of variables declaration//GEN-END:variables
}
